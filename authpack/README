If you have renderman on your system, this directory contains everything
that you need in order to generate a very simple, but complete light
field.  If you just want to jump into things:

 - run drawslab.perl, without any arguments.  It will draw
   4 4x4 slabs of the dragon.  These slabs are drawn without
   proper sythetic aperture.  This makes the rendering much faster,
   but also causes bad aliasing.  You can turn on synthetic aperture
   in drawslab.perl.

 - run "tiftorgb.perl unit4.lid".  This will convert all of the tif
   files to rgb files.

 - Now you can run "lifview unit4.lid" to view the lightfield,
   directly from the raw images.

 - You can also run "lifauth unit4.lid dragon4.lif", to compress
   the raw images into a single lif file.  Run lifauth without
   any arguments to get a list of all the options.

 - After running lifauth, you can run lifview on the dragon4.lif file.


Files:
------

README		This file.

E4/		These directories are initially empty.  They provide a
E8/		location to store the image files that are generated.
N4/		When drawslab.perl calls renderman, it outputs the
N8/ 		images as tif files in these directories.  The 
S4/		tiftorgb.perl script (see below) will convert the
S8/		images to rgb images.
W4/
W8/

Makefile	This is the makefile to compile the lidquery executable.

church.env	An environment map, used to render the dragon.

dragon_res4.rib	A "renderman interface bytestream" file, which describes
		the geometry for an *extremely* decimated dragon.

drawslab.perl*	The main perl script for rendering the images of a 
		lightfield. It has many comments that explain what
		to modify.  Basic usage:

		drawslab.perl		Draws the entire default light
					field (unit4.lid)
		drawslab.perl 1 3 0	Draws slab 1, image (3,0) from
					the default light field

		This script uses the world.rib template to generate
		a world.slabn.u.v.rib file.  It also creates a
		window.slabn.u.v.rib file, which contains the
		viewing parameters.  It uses rmanpp to combine
		all the .rib files into a single bytestream, and
		sends it to prman to draw the image.

lidquery*	This program allows a script (or user) to query
		the contents of a lid file.  Run lidquery without
		any arguments to get a list of all the options
		that it can return.

lidquery.c	These are the source files for the lidquery program.
lidquery.h	The lidquery.[ch] files can be used as an interface
lidquery_main.c to a larger C program that gets information from the
		lid file.
	
object.rib	This is a wrapper for the renderman object to be
		drawn.  For the unit[38].lid files, it should contain
		an object that fits in the unit cube (-0.5 to 0.5).

rmanpp*		This is a helpful utility that combines several
		.rib files into a single file.  It handles the
		##Include directive.

shinymetal.sl	This is the shader that we used to render the dragon.
shinymetal.slo

tiftorgb.perl*	This is a script that converts .tif images to .rgb
		images.  It reads the lid file, and figures out the
		names of all the images that need to be converted.

unit4.lid	These are two lid (LIght field Description) files.	
unit8.lid	They each describe a 4-slab 360-degree surround
		light field.  They are both very low resolution, but
		easily modified to do higher resolution.

world.rib	This is the template for the world.slabn.u.v.rib 
		files.  The drawslab.perl script uses sed to 
		convert this template into the actual .rib
		files.
